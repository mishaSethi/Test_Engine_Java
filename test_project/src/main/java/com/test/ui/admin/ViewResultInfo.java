/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package com.test.ui.admin;

import com.test.model.dao.LoginInfoDAO;
import com.test.model.dao.ResultInfoDAO;
import com.test.model.to.LoginInfoTO;
import com.test.model.to.ResultInfoTO;
import java.util.List;
import javax.swing.table.DefaultTableModel;

/**
 *
 * @author user
 */
public class ViewResultInfo extends javax.swing.JInternalFrame {

    /**
     * Creates new form ViewResultInfo
     */
    public ViewResultInfo() {
        initComponents();
        bindStudentCombo();
    }

    private void bindStudentCombo(){
        List<LoginInfoTO> allstudents = new LoginInfoDAO().getAllstudents();
        jcbStudent.removeAllItems();
        jcbStudent.addItem("Choose any Student");
        if (allstudents != null && allstudents.size() > 0) {
            for (LoginInfoTO stu : allstudents) {
                jcbStudent.addItem(stu);
            }
        }
        bindStudentTable(null);
    }
    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jScrollPane1 = new javax.swing.JScrollPane();
        tableViewresultinfo = new javax.swing.JTable();
        jLabel1 = new javax.swing.JLabel();
        jcbStudent = new javax.swing.JComboBox<>();
        btnResult = new javax.swing.JButton();

        setClosable(true);
        setIconifiable(true);
        setTitle("Result Information");
        setPreferredSize(new java.awt.Dimension(691, 483));

        tableViewresultinfo.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "Title 1", "Title 2", "Title 3", "Title 4"
            }
        ));
        jScrollPane1.setViewportView(tableViewresultinfo);

        jLabel1.setText("Choose Student:");

        jcbStudent.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Item 1", "Item 2", "Item 3", "Item 4" }));

        btnResult.setText("View Selected Student Result");
        btnResult.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnResultActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(19, 19, 19)
                        .addComponent(jLabel1)
                        .addGap(36, 36, 36)
                        .addComponent(jcbStudent, javax.swing.GroupLayout.PREFERRED_SIZE, 506, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(179, 179, 179)
                        .addComponent(btnResult, javax.swing.GroupLayout.PREFERRED_SIZE, 321, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap(80, Short.MAX_VALUE))
            .addComponent(jScrollPane1, javax.swing.GroupLayout.Alignment.TRAILING)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addGap(26, 26, 26)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel1)
                    .addComponent(jcbStudent, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addComponent(btnResult, javax.swing.GroupLayout.DEFAULT_SIZE, 39, Short.MAX_VALUE)
                .addGap(25, 25, 25)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 310, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void btnResultActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnResultActionPerformed
        List<ResultInfoTO> results = null;
        if(jcbStudent.getSelectedIndex() > 0){
            LoginInfoTO student = (LoginInfoTO) jcbStudent.getSelectedItem();
            results = new ResultInfoDAO().getAllRecord(student.getUsername());
        }
        bindStudentTable(results);
    }//GEN-LAST:event_btnResultActionPerformed

    private void bindStudentTable(List<ResultInfoTO> results){
     
        String[] colnames = {"Test Name", "Total Question","Total Attempt","Total Right","Total Marks","Result Date"};
        // Table is a structure of row and column
        // So in programming two d array is best choice to represent table structure
        // Below records represent all record provided by this
        Object[][] records = null;
        if (results != null && results.size() > 0) {
            records = new Object[results.size()][colnames.length];
            int i = 0;
            for (ResultInfoTO rit : results) {
                records[i] = new Object[]{rit.getTestname(),rit.getTotalquestion(),rit.getAttempquestion(),rit.getRightquestion(),rit.getObtainedmarks(),rit.getResultdate()};
                i++;
            }
        } else {
            records = new Object[1][colnames.length];
            records[0] = new Object[]{"There is No Record", "There is No Record","There is No Record", "There is No Record", "There is No Record", "There is No Record"};
        }
       
        DefaultTableModel dtm = new DefaultTableModel(records, colnames) {
            @Override
            public boolean isCellEditable(int row, int column) {
                return false;
            }
        };
        tableViewresultinfo.setModel(dtm);
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnResult;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JComboBox<Object> jcbStudent;
    private javax.swing.JTable tableViewresultinfo;
    // End of variables declaration//GEN-END:variables
}
